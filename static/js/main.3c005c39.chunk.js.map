{"version":3,"sources":["components/NotFound.js","components/Form.js","components/UserSignUp.js","components/UserSignIn.js","components/Courses.js","components/CourseDetail.js","components/CreateCourse.js","components/UpdateCourse.js","components/Forbidden.js","components/Error.js","components/ModalBox.js","config.js","Data.js","Context.js","PrivateRoute.js","App.js","components/Header.js","components/UserSignOut.js","serviceWorker.js","index.js"],"names":["className","props","cancel","errors","submit","submitButtonText","elements","ErrorsDisplay","onSubmit","event","preventDefault","type","onClick","errorsDisplay","map","error","i","key","UserSignUp","state","name","firstName","lastName","emailAddress","password","change","target","value","setState","context","user","data","createUser","then","actions","signIn","history","push","catch","err","console","log","this","Form","Fragment","id","onChange","placeholder","to","Component","UserSignIn","username","from","location","pathname","Courses","courses","fetch","response","json","course","title","version","xmlns","x","y","viewBox","points","Markdown","require","CourseDetail","deleteCourse","authenticatedUser","courseId","match","params","length","selectedCourse","getCourse","owner","User","bind","returnToList","authToChange","authUser","style","color","href","source","description","estimatedTime","materialsNeeded","CreateCourse","userId","createCourse","message","index","UpdateCourse","updateCourse","componentDidMount","courseToUpdate","a","authId","Forbidden","Error","class","ModalBox","Button","variant","close","Data","path","method","body","requiresAuth","credentials","url","config","options","headers","JSON","stringify","encodedCredentials","btoa","api","status","Context","React","createContext","Provider","Cookies","getJSON","getUser","set","expires","signOut","remove","children","Consumer","withContext","component","rest","render","HeaderWithContext","UserSignUpWithContext","UserSignInWithContext","UserSignOutWithContext","CoursesWithContext","CourseDetailWithContext","CreateCourseWithContext","UpdateCourseWithContext","App","showModal","closeModel","modal","basename","process","exact","PrivateRoute","NotFound","Boolean","window","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3c005c39.chunk.js","sourcesContent":["import React from 'react';\n\nexport default () => (\n  <div className=\"bounds\">\n    <h1>Not Found</h1>\n    <p>Sorry! We couldn't find the page you're looking for.</p>\n  </div>\n);\n","import React from 'react';\n\nexport default (props) => {\n  const { cancel, errors, submit, submitButtonText, elements } = props;\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    submit();\n  }\n\n  function handleCancel(event) {\n    event.preventDefault();\n    cancel();\n  }\n\n  return (\n    <div>\n      <ErrorsDisplay errors={errors} />\n      <form onSubmit={handleSubmit}>\n        {elements()}\n        <div className=\"pad-bottom\">\n          <button className=\"button\" type=\"submit\">\n            {submitButtonText}\n          </button>\n          <button className=\"button button-secondary\" onClick={handleCancel}>\n            Cancel\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nfunction ErrorsDisplay({ errors }) {\n  let errorsDisplay = null;\n\n  if (errors) {\n    errorsDisplay = (\n      <div>\n        <h2 className=\"validation--errors--label\">Validation errors</h2>\n        <div className=\"validation-errors\">\n          <ul>\n            {errors.map((error, i) => (\n              <li key={i}>{error}</li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n\n  return errorsDisplay;\n}\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport Form from './Form';\n\nexport default class UserSignUp extends Component {\n  state = {\n    name: '',\n    firstName: '',\n    lastName: '',\n    emailAddress: '',\n    password: '',\n    errors: null,\n  };\n\n  render() {\n    const { firstName, lastName, emailAddress, errors, password } = this.state;\n\n    return (\n      <div className=\"bounds\">\n        <div className=\"grid-33 centered signin\">\n          <h1>Sign Up</h1>\n          <Form\n            cancel={this.cancel}\n            errors={errors}\n            submit={this.submit}\n            submitButtonText=\"Sign Up\"\n            elements={() => (\n              <React.Fragment>\n                <input\n                  id=\"firstName\"\n                  name=\"firstName\"\n                  type=\"text\"\n                  value={firstName}\n                  onChange={this.change}\n                  placeholder=\"First Name\"\n                />\n                <input\n                  id=\"lastName\"\n                  name=\"lastName\"\n                  type=\"text\"\n                  value={lastName}\n                  onChange={this.change}\n                  placeholder=\"Last Name\"\n                />\n                <input\n                  id=\"emailAddress\"\n                  name=\"emailAddress\"\n                  type=\"emailAddress\"\n                  value={emailAddress}\n                  onChange={this.change}\n                  placeholder=\"Email Address\"\n                />\n                <input\n                  id=\"password\"\n                  name=\"password\"\n                  type=\"password\"\n                  value={password}\n                  onChange={this.change}\n                  placeholder=\"Password\"\n                />\n              </React.Fragment>\n            )}\n          />\n          <p>\n            Already have a user account? <Link to=\"/signin\">Click here</Link> to\n            sign in!\n          </p>\n        </div>\n      </div>\n    );\n  }\n\n  change = (event) => {\n    const name = event.target.name;\n    const value = event.target.value;\n\n    this.setState(() => {\n      return {\n        [name]: value,\n      };\n    });\n  };\n\n  submit = () => {\n    this.setState({\n      errors: null,\n    });\n    const { context } = this.props;\n    const { firstName, lastName, emailAddress, password } = this.state;\n\n    // Create user\n    const user = {\n      firstName,\n      lastName,\n      emailAddress,\n      password,\n    };\n\n    context.data\n      .createUser(user)\n      .then((errors) => {\n        if (errors) {\n          this.setState({ errors });\n        } else {\n          context.actions.signIn(emailAddress, password).then(() => {\n            this.props.history.push('/');\n          });\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        this.props.history.push('/error');\n      });\n  };\n\n  cancel = () => {\n    this.props.history.push('/');\n  };\n}\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport Form from './Form';\n\nexport default class UserSignIn extends Component {\n  state = {\n    username: '',\n    password: '',\n    errors: null,\n  };\n\n  render() {\n    const { username, password, errors } = this.state;\n\n    return (\n      <div className=\"bounds\">\n        <div className=\"grid-33 centered signin\">\n          <h1>Sign In</h1>\n          <Form\n            cancel={this.cancel}\n            errors={errors}\n            submit={this.submit}\n            submitButtonText=\"Sign In\"\n            elements={() => (\n              <React.Fragment>\n                <input\n                  id=\"username\"\n                  name=\"username\"\n                  type=\"text\"\n                  value={username}\n                  onChange={this.change}\n                  placeholder=\"User Name\"\n                />\n                <input\n                  id=\"password\"\n                  name=\"password\"\n                  type=\"password\"\n                  value={password}\n                  onChange={this.change}\n                  placeholder=\"Password\"\n                />\n              </React.Fragment>\n            )}\n          />\n          <p>\n            Don't have a user account? <Link to=\"/signup\">Click here</Link> to\n            sign up!\n          </p>\n        </div>\n      </div>\n    );\n  }\n\n  change = (event) => {\n    const name = event.target.name;\n    const value = event.target.value;\n\n    this.setState(() => {\n      return {\n        [name]: value,\n      };\n    });\n  };\n\n  submit = () => {\n    const { context } = this.props;\n    const { from } = this.props.location.state || {\n      from: { pathname: '/' },\n    };\n    const { username, password } = this.state;\n\n    context.actions\n      .signIn(username, password)\n      .then((user) => {\n        if (user === null) {\n          this.setState(() => {\n            return { errors: ['Sign-in was unsuccessful'] };\n          });\n        } else {\n          this.props.history.push(from);\n        }\n      })\n      .catch((error) => {\n        console.error(error);\n        this.props.history.push('/error');\n      });\n  };\n\n  cancel = () => {\n    this.props.history.push('/');\n  };\n}\n","// This is a stateful component which is display all the courses on the screen to begin with //\n\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nexport default class Courses extends Component {\n  constructor() {\n    super();\n    this.state = {\n      courses: [],\n    };\n  }\n\n  // Within the component did ount method i will get the full list of courses from the api\n\n  componentDidMount() {\n    return fetch('https://thfs-final-project-api.herokuapp.com/api/courses').then((response) =>\n      response.json().then((courses) => {\n        this.setState({ courses: courses });\n      })\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"bounds\">\n        {this.state.courses.map((course) => {\n          return (\n            <div key={course.id} className=\"grid-33\">\n              <Link\n                className=\"course--module course--link\"\n                to={`/courses/${course.id}`}\n              >\n                <h4 className=\"course--label\">Course</h4>\n                <h3 className=\"course--title\">{course.title}</h3>\n              </Link>\n            </div>\n          );\n        })}\n\n        <div className=\"grid-33\">\n          <Link\n            to=\"/courses/create\"\n            className=\"course--module course--add--module\"\n          >\n            <h3 className=\"course--add--title\">\n              <svg\n                version=\"1.1\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n                x=\"0px\"\n                y=\"0px\"\n                viewBox=\"0 0 13 13\"\n                className=\"add\"\n              >\n                <polygon points=\"7,6 7,0 6,0 6,6 0,6 0,7 6,7 6,13 7,13 7,7 13,7 13,6 \"></polygon>\n              </svg>\n              New Course\n            </h3>\n          </Link>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nconst Markdown = require('react-markdown');\n\nexport default class CourseDetail extends Component {\n  constructor() {\n    super();\n    this.state = {\n      course: [],\n      owner: [],\n    };\n    this.selectedCourse = this.selectedCourse.bind(this);\n    this.returnToList = this.returnToList.bind(this);\n    this.deleteCourse = this.deleteCourse.bind(this);\n  }\n\n  // Once this page is loaded the componentDidMount method will trigger the selectedCourse method\n\n  componentDidMount() {\n    this.selectedCourse();\n  }\n\n  deleteCourse = () => {\n    if (this.props.context.authenticatedUser) {\n      const { password, emailAddress } = this.props.context.authenticatedUser;\n      let username = emailAddress;\n      let user = { password, username };\n      let courseId = this.props.match.params.id;\n      this.props.context.data.deleteCourse(courseId, user).then((errors) => {\n        if (errors.length) {\n          this.setState({ errors });\n        } else this.props.history.push('/');\n      });\n    } else {\n      this.props.history.push('/forbidden');\n    }\n  };\n\n  selectedCourse = () => {\n    let courseId = this.props.match.params.id;\n    this.props.context.data.getCourse(courseId).then((response) => {\n      if (!response.error) {\n        this.setState({ course: response, owner: response.User });\n      } else {\n        this.props.history.push('/notfound');\n      }\n    });\n  };\n\n  // })\n  // .catch((error) => {\n  //   this.props.history.push('/notfound');\n  // });\n\n  returnToList() {\n    this.props.history.push('/');\n  }\n  render() {\n    // the conditional rendering below will only display the delete and update course button if the authenticated user owns the course. I have checked this by comparing the authenticatedUser email address with the owner email address and if they match then rendering the buttons.\n    \n    let authToChange = false;\n    if (this.props.context.authenticatedUser) {\n      let authUser = this.props.context.authenticatedUser.emailAddress;\n      let Owner = this.state.owner.emailAddress;\n      authToChange = Owner === authUser;\n    }\n    let course = this.state.course;\n    let courseId = this.props.match.params.id;\n    return (\n      <div className=\"bounds course--detail\">\n        <div>\n          <div className=\"actions--bar\">\n            <div className=\"bounds\">\n              <div className=\"grid-100\">\n                {authToChange && (\n                  <span>\n                    <div className=\"button\">\n                      <Link\n                        style={{ color: 'white' }}\n                        to={`/courses/${courseId}/update`}\n                      >\n                        Update Course\n                      </Link>\n                    </div>\n                    <button\n                      className=\"button\"\n                      onClick={() => this.deleteCourse()}\n                    >\n                      Delete Course\n                    </button>\n                  </span>\n                )}\n\n                <a className=\"button button-secondary\" href=\"/\">\n                  Return to List\n                </a>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"grid-66\">\n          <div className=\"course--header\">\n            <h4 className=\"course--label\">Course</h4>\n            <h3 className=\"course--title\">{course.title}</h3>\n            <p>\n              By {this.state.owner.firstName} {this.state.owner.lastName}\n            </p>\n          </div>\n          <div className=\"course--description\">\n            <Markdown source={course.description} />\n          </div>\n        </div>\n        <div className=\"grid-25 grid-right\">\n          <div className=\"course--stats\">\n            <ul className=\"course--stats--list\">\n              <li className=\"course--stats--list--item\">\n                <h4>Estimated Time</h4>\n                <h3>{course.estimatedTime}</h3>\n              </li>\n              <li className=\"course--stats--list--item\">\n                <h4>Materials Needed</h4>\n                <ul>\n                  <Markdown source={course.materialsNeeded} />\n                </ul>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nexport default class CreateCourse extends Component {\n  state = {\n    title: '',\n    description: '',\n    estimatedTime: '',\n    materialsNeeded: '',\n    errors: null,\n  };\n\n  // the method below handles any user inputs and adds it to state\n  //latest update 17.39 //\n\n  change = (event) => {\n    let { name } = event.target;\n    let { value } = event.target;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  // Below the submit method collates all the auth user information and the course information and sends them across the createCourse method which makes the api request\n\n  submit = (event) => {\n    event.preventDefault();\n    this.setState({\n      errors: null,\n    });\n    const { password, emailAddress } = this.props.context.authenticatedUser;\n    let username = emailAddress;\n    let user = { password, username };\n    let userId = this.props.context.authenticatedUser.id;\n    let { title, description, estimatedTime, materialsNeeded } = this.state;\n    let course = { title, description, estimatedTime, materialsNeeded, userId };\n    this.props.context.data.createCourse(course, user).then((errors) => {\n      console.log(errors);\n      if (errors) {\n        this.setState({ errors: errors.message });\n      } else {\n        this.props.history.push('/');\n      }\n    });\n  };\n\n  cancel = (event) => {\n    this.props.history.push('/');\n  };\n\n  render() {\n    // Any validation errors are rendered below to the page.\n    let { firstName, lastName } = this.props.context.authenticatedUser;\n    let errors = this.state.errors;\n    return (\n      <div className=\"bounds course--detail\">\n        <h1>Create Course</h1>\n        <div>\n          {errors && (\n            <div>\n              <h2 className=\"validation--errors--label\">Validation errors</h2>\n              <div className=\"validation-errors\">\n                <ul>\n                  {errors.map((error, index) => {\n                    return <li key={index}>{error}</li>;\n                  })}\n                </ul>\n              </div>\n            </div>\n          )}\n          <form onSubmit={this.submit}>\n            <div className=\"grid-66\">\n              <div className=\"course--header\">\n                <h4 className=\"course--label\">Course</h4>\n                <div>\n                  <input\n                    id=\"title\"\n                    name=\"title\"\n                    type=\"text\"\n                    className=\"input-title course--title--input\"\n                    placeholder=\"Course title...\"\n                    value={this.state.value}\n                    onChange={this.change}\n                  />\n                </div>\n                <p>\n                  by {firstName} {lastName}\n                </p>\n              </div>\n              <div className=\"course--description\">\n                <div>\n                  <textarea\n                    id=\"description\"\n                    name=\"description\"\n                    className=\"\"\n                    placeholder=\"Course description...\"\n                    value={this.state.value}\n                    onChange={this.change}\n                  ></textarea>\n                </div>\n              </div>\n            </div>\n            <div className=\"grid-25 grid-right\">\n              <div className=\"course--stats\">\n                <ul className=\"course--stats--list\">\n                  <li className=\"course--stats--list--item\">\n                    <h4>Estimated Time</h4>\n                    <div>\n                      <input\n                        id=\"estimatedTime\"\n                        name=\"estimatedTime\"\n                        type=\"text\"\n                        className=\"course--time--input\"\n                        placeholder=\"Hours\"\n                        value={this.state.value}\n                        onChange={this.change}\n                      />\n                    </div>\n                  </li>\n                  <li className=\"course--stats--list--item\">\n                    <h4>Materials Needed</h4>\n                    <div>\n                      <textarea\n                        id=\"materialsNeeded\"\n                        name=\"materialsNeeded\"\n                        className=\"\"\n                        placeholder=\"List materials...\"\n                        value={this.state.value}\n                        onChange={this.change}\n                      ></textarea>\n                    </div>\n                  </li>\n                </ul>\n              </div>\n            </div>\n            <div className=\"grid-100 pad-bottom\">\n              <button className=\"button\" type=\"submit\">\n                Create Course\n              </button>\n              <button\n                className=\"button button-secondary\"\n                type=\"button\"\n                onClick={this.cancel}\n              >\n                Cancel\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nexport default class UpdateCourse extends Component {\n  constructor() {\n    super();\n    this.state = {\n      id: null,\n      title: '',\n      description: '',\n      estimatedTime: '',\n      materialsNeeded: '',\n      errors: '',\n      userId: null,\n      owner: null,\n    };\n  }\n\n  updateCourse = (event) => {\n    event.preventDefault();\n    const { password, emailAddress } = this.props.context.authenticatedUser;\n    let {\n      id,\n      title,\n      description,\n      estimatedTime,\n      materialsNeeded,\n      userId,\n    } = this.state;\n    let username = emailAddress;\n    let user = { password, username };\n    let course = {\n      id,\n      title,\n      description,\n      estimatedTime,\n      materialsNeeded,\n      userId,\n    };\n    this.props.context.data.updateCourse(course, user).then((response) => {\n      if (response.message) {\n        this.setState({ errors: response.message });\n      } else {\n        this.props.history.push('/');\n      }\n    });\n  };\n\n  componentDidMount = () => {\n    this.courseToUpdate();\n  };\n\n  change = (event) => {\n    let { name } = event.target;\n    let { value } = event.target;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  cancel = (event) => {\n    this.props.history.push('/');\n  };\n\n  courseToUpdate = async () => {\n    let courseId = this.props.match.params.id;\n    this.props.context.data.getCourse(courseId).then((response) => {\n      if (!response.error) {\n        let {\n          id,\n          title,\n          description,\n          estimatedTime,\n          materialsNeeded,\n          userId,\n        } = response;\n        // here we set state for the course and the owner\n        this.setState({\n          id,\n          title,\n          description,\n          estimatedTime,\n          materialsNeeded,\n          userId,\n          owner: response.User.id,\n        });\n      } else {\n        this.props.history.push('./notfound');\n      }\n    });\n  };\n\n  //This section will check if there the auth user Id not the same as the userId on the course and if so it will render the forbidden page. I am trying two methods below, one via component did update and other just comparing state\n\n  componentDidUpdate() {\n    let authId = this.props.context.authenticatedUser.id;\n    if (this.state.owner !== authId) {\n      this.props.history.push('/forbidden');\n    }\n  }\n\n  render() {\n    let { firstName, lastName } = this.props.context.authenticatedUser;\n    let { description, estimatedTime, materialsNeeded, title } = this.state;\n    let errors = this.state.errors;\n    return (\n      <div className=\"bounds course--detail\">\n        <h1>Update Course</h1>\n        <div>\n          {errors && (\n            <div>\n              <h2 className=\"validation--errors--label\">Validation errors</h2>\n              <div className=\"validation-errors\">\n                <ul>\n                  {errors.map((error, index) => {\n                    return <li key={index}>{error}</li>;\n                  })}\n                </ul>\n              </div>\n            </div>\n          )}\n          <form onSubmit={this.updateCourse}>\n            <div className=\"grid-66\">\n              <div className=\"course--header\">\n                <h4 className=\"course--label\">Course</h4>\n                <div>\n                  <input\n                    id=\"title\"\n                    name=\"title\"\n                    type=\"text\"\n                    className=\"input-title course--title--input\"\n                    placeholder=\"Course title...\"\n                    value={title}\n                    onChange={this.change}\n                  />\n                </div>\n                <p>\n                  By {firstName} {lastName}\n                </p>\n              </div>\n              <div className=\"course--description\">\n                <div>\n                  <textarea\n                    id=\"description\"\n                    name=\"description\"\n                    className=\"\"\n                    placeholder=\"...Description\"\n                    value={description}\n                    onChange={this.change}\n                  ></textarea>\n                </div>\n              </div>\n            </div>\n            <div className=\"grid-25 grid-right\">\n              <div className=\"course--stats\">\n                <ul className=\"course--stats--list\">\n                  <li className=\"course--stats--list--item\">\n                    <h4>Estimated Time</h4>\n                    <div>\n                      <input\n                        id=\"estimatedTime\"\n                        name=\"estimatedTime\"\n                        type=\"text\"\n                        className=\"course--time--input\"\n                        placeholder=\"...estimated time  \"\n                        value={estimatedTime}\n                        onChange={this.change}\n                      />\n                    </div>\n                  </li>\n                  <li className=\"course--stats--list--item\">\n                    <h4>Materials Needed</h4>\n                    <div>\n                      <textarea\n                        id=\"materialsNeeded\"\n                        name=\"materialsNeeded\"\n                        className=\"\"\n                        placeholder=\"...materialsNeeded\"\n                        value={materialsNeeded}\n                        onChange={this.change}\n                      ></textarea>\n                    </div>\n                  </li>\n                </ul>\n              </div>\n            </div>\n            <div className=\"grid-100 pad-bottom\">\n              <button className=\"button\" type=\"submit\">\n                Update Course\n              </button>\n              <button className=\"button button-secondary\" onClick={this.cancel}>\n                Cancel\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\n\nexport default function Forbidden() {\n  return (\n    <div className=\"bounds\">\n      <h1>Forbidden</h1>\n      <p>Oh oh! You can't access this page.</p>\n    </div>\n  );\n}\n","import React from 'react';\n\nexport default function Error() {\n  return (\n    <div class=\"bounds\">\n      <h1>Error</h1>\n      <p>Sorry! We just encountered an unexpected error.</p>\n    </div>\n  );\n}\n","import React from \"react\";\nimport Button from \"react-bootstrap/Button\";\n\nfunction ModalBox(props) {\n  return (\n    <div className=\"modal\">\n      <div className=\"container\">\n        <h1>How to use and navigate this site</h1>\n        <h2>\n          This website allows users to browse available courses. If you are\n          signed in and have created a course, when you click on that course to\n          view it, you can edit and delete it. You can view other people's\n          course but can't edit or delete them. To play around with it you can\n          create your own user to create a course, or sign in as\n          david@mulholland.com, password easy123 if you want to edit my courses.\n        </h2>\n\n        <Button variant=\"primary\" onClick={() => props.close()}>\n          OK\n        </Button>\n      </div>\n    </div>\n  );\n}\n\nexport default ModalBox;\n","\nexport default {\n  apiBaseUrl: 'https://thfs-final-project-api.herokuapp.com/api',\n};\n","import config from './config';\n\n// This is the app which makes all the calls to the api and returns the data to the statetful components which have requested it so they can hole the data in their own state and use it re re render the component. The data component is is held in state by the context app so each componentn can access it via context\n\nexport default class Data {\n  // This api method abstracts way the various options used to fetch from an api.\n\n  api(\n    path,\n    method = 'GET',\n    body = null,\n    requiresAuth = false,\n    credentials = null\n  ) {\n    const url = config.apiBaseUrl + path;\n\n    const options = {\n      method,\n      headers: {\n        'Content-Type': 'application/json; charset=utf-8',\n      },\n    };\n\n    if (body !== null) {\n      options.body = JSON.stringify(body);\n    }\n\n    if (requiresAuth) {\n      const encodedCredentials = btoa(\n        `${credentials.username}:${credentials.password}`\n      );\n      options.headers['Authorization'] = `Basic ${encodedCredentials}`;\n    }\n    return fetch(url, options);\n  }\n\n  // Below are all the various methods to make calls to the api and handle the responses, the response is handed back to the method which called it in the component so the data can be added to state and the component re rendered. Any errors are dealt with her as well and error messages passed back.\n\n  async getUser(username, password) {\n    const response = await this.api(`/users`, 'GET', null, true, {\n      username,\n      password,\n    });\n    if (response.status === 200) {\n      return response.json().then((data) => data);\n    } else if (response.status === 401) {\n      return null;\n    } else {\n      throw new Error();\n    }\n  }\n\n  async deleteCourse(courseId, user) {\n    const response = await this.api(\n      `/courses/${courseId}`,\n      'DELETE',\n      null,\n      true,\n      user\n    );\n    if (response.status === 204) {\n      return [];\n    } else if (response.status === 401) {\n      return response.json().then((data) => {\n        return data.message;\n      });\n    } else {\n      throw new Error();\n    }\n  }\n\n  async createCourse(course, user) {\n    let response = await this.api('/courses', 'POST', course, true, user);\n    if (response.status === 201) {\n      return null;\n    } else if (response.status === 400) {\n      response = await response.json();\n      return response;\n    }\n\n    throw new Error();\n  }\n\n  async updateCourse(course, user) {\n    let response = await this.api(\n      `/courses/${course.id}`,\n      'PUT',\n      course,\n      true,\n      user\n    );\n    if (response.status === 204) {\n      return response;\n    }\n    if (response.status === 404) {\n      return response.json().then((response) => {\n        response.errors = 'no such course';\n        return response;\n      });\n    }\n    if (response.status === 400) {\n      response = await response.json();\n      return response;\n    }\n  }\n\n  async getCourse(id) {\n    const response = await this.api(`/courses/${id}`, 'GET', null, false, null);\n    if (response.status === 200) {\n      return response.json().then((data) => data);\n    } else if (response.status === 404) {\n      response.error = ' cant find this course';\n      return response;\n    } else {\n      throw new Error();\n    }\n  }\n\n  async createUser(user) {\n    const response = await this.api('/users', 'POST', user);\n    if (response.status === 201) {\n      return null;\n    } else if (response.status === 400) {\n      return response.json().then((data) => {\n        return data.message;\n      });\n    } else {\n      throw new Error();\n    }\n  }\n}\n","import React, { Component } from 'react';\nimport Cookies from 'js-cookie';\nimport Data from './Data';\n\nconst Context = React.createContext();\n\nexport class Provider extends Component {\n  state = {\n    authenticatedUser: Cookies.getJSON('authenticatedUser') || null,\n    // authenticatedUser: null,\n  };\n\n  constructor() {\n    super();\n    this.data = new Data();\n  }\n\n  // Below is where i have give context to all of my components within the app. The context is the authenticated user if there is one and this information is available to all the components in the app because this conext is placed around the app component in the index.js so at the highest level.\n\n  render() {\n    const { authenticatedUser } = this.state;\n    const value = {\n      authenticatedUser,\n      data: this.data,\n      actions: {\n        signIn: this.signIn,\n        signOut: this.signOut,\n      },\n    };\n    return (\n      <Context.Provider value={value}>{this.props.children}</Context.Provider>\n    );\n  }\n\n  signIn = async (username, password) => {\n    const user = await this.data.getUser(username, password);\n    if (user !== null) {\n      user.password = password;\n      this.setState(() => {\n        return {\n          authenticatedUser: user,\n        };\n      });\n      // const cookieOptions = {\n      //   expires: 1, // 1 day\n      // };\n      Cookies.set('authenticatedUser', JSON.stringify(user), { expires: 1 });\n    }\n    return user;\n  };\n\n  signOut = () => {\n    this.setState({ authenticatedUser: null });\n    Cookies.remove('authenticatedUser');\n  };\n}\n\nexport const Consumer = Context.Consumer;\n\n/**\n * A higher-order component that wraps the provided component in a Context Consumer component.\n * @param {class} Component - A React component.\n * @returns {function} A higher-order component.\n */\n\nexport default function withContext(Component) {\n  return function ContextComponent(props) {\n    return (\n      <Context.Consumer>\n        {(context) => <Component {...props} context={context} />}\n      </Context.Consumer>\n    );\n  };\n}\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { Consumer } from './Context';\n\nexport default ({ component: Component, ...rest }) => {\n  // this HOC private route component takes both the create course and update course components and make sures an authenticated user is signed in, otherwise directing them to sign up\n\n  \n\n  return (\n    <Consumer>\n      {(context) => (\n        <Route\n          {...rest}\n          render={(props) =>\n            context.authenticatedUser ? (\n              <Component {...props} />\n            ) : (\n              <Redirect\n                to={{\n                  pathname: '/forbidden',\n                  state: { from: props.location },\n                }}\n              />\n            )\n          }\n        />\n      )}\n    </Consumer>\n  );\n};\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport Header from \"./components/Header\";\nimport NotFound from \"./components/NotFound\";\nimport UserSignUp from \"./components/UserSignUp\";\nimport UserSignIn from \"./components/UserSignIn\";\nimport UserSignOut from \"./components/UserSignOut\";\nimport Courses from \"./components/Courses\";\nimport CourseDetail from \"./components/CourseDetail\";\nimport CreateCourse from \"./components/CreateCourse\";\nimport UpdateCourse from \"./components/UpdateCourse\";\nimport Forbidden from \"./components/Forbidden\";\nimport Error from \"./components/Error\";\nimport ModalBox from \"./components/ModalBox\";\nimport withContext from \"./Context\";\nimport PrivateRoute from \"./PrivateRoute\";\nimport Modal from \"react-bootstrap/Modal\";\n\nconst HeaderWithContext = withContext(Header);\nconst UserSignUpWithContext = withContext(UserSignUp);\nconst UserSignInWithContext = withContext(UserSignIn);\nconst UserSignOutWithContext = withContext(UserSignOut);\nconst CoursesWithContext = withContext(Courses);\nconst CourseDetailWithContext = withContext(CourseDetail);\nconst CreateCourseWithContext = withContext(CreateCourse);\nconst UpdateCourseWithContext = withContext(UpdateCourse);\n\nclass App extends React.Component {\n  state = { showModal: true };\n\n  closeModel = () => {\n    this.setState({\n      showModal: false,\n    });\n  };\n\n  render() {\n    let modal = this.state.showModal ? (\n      <ModalBox close={this.closeModel} />\n    ) : null;\n    console.log(modal);\n    return (\n      <>\n        <Router basename={process.env.PUBLIC_URL}>\n          <div>\n            {modal}\n            <HeaderWithContext />\n            <Switch>\n              <Route exact path=\"/\" component={CoursesWithContext} />\n              <PrivateRoute\n                exact\n                path=\"/courses/create\"\n                component={CreateCourseWithContext}\n              />\n              <Route\n                exact\n                path=\"/courses/:id\"\n                component={CourseDetailWithContext}\n              />\n              ;\n              <PrivateRoute\n                exact\n                path=\"/courses/:id/update\"\n                component={UpdateCourseWithContext}\n              />\n              <Route exact path=\"/forbidden\" component={Forbidden} />\n              <Route exact path=\"/signin\" component={UserSignInWithContext} />\n              <Route exact path=\"/signup\" component={UserSignUpWithContext} />\n              <Route exact path=\"/signout\" component={UserSignOutWithContext} />\n              <Route exact path=\"/error\" component={Error} />\n              <Route exact path=\"/notfound\" component={NotFound} />\n              <Route component={NotFound} />\n            </Switch>\n          </div>\n        </Router>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport default function Header(props) {\n  // The header uses auth user context to conditional render info to the page\n  const { context } = props;\n  const authUser = context.authenticatedUser;\n  return (\n    <div className=\"header\">\n      <div className=\"bounds\">\n        <h1 className=\"header--logo\">Courses</h1>\n        <nav>\n          {authUser ? (\n            <React.Fragment>\n              <span>Welcome, {authUser.firstName}!</span>\n              <Link to=\"/signout\">Sign Out</Link>\n            </React.Fragment>\n          ) : (\n            <React.Fragment>\n              <Link className=\"signup\" to=\"/signup\">\n                Sign Up\n              </Link>\n              <Link className=\"signin\" to=\"/signin\">\n                Sign In\n              </Link>\n            </React.Fragment>\n          )}\n        </nav>\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\n\nexport default ({ context }) => {\n  context.actions.signOut();\n\n  return <Redirect to=\"/\" />;\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './App.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from './Context.js';\n\n// Below I am wrapping the app component with a higher order component of ContextProvider. ContextProvider handles all the user authentication for the app and will mean every component has access to the authenticated used should they need it via context\n\nReactDOM.render(\n  <Provider>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}